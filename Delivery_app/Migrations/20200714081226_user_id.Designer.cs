// <auto-generated />
using System;
using Delivery_app.Entities;
using Delivery_app.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Delivery_app.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200714081226_user_id")]
    partial class user_id
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Delivery_app.Models.DB.VehicleType", b =>
                {
                    b.Property<int>("vehicle_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("vehicle_type_id");

                    b.ToTable("vehicle_type");
                });

            modelBuilder.Entity("Delivery_app.Models.DeliveryStatus", b =>
                {
                    b.Property<int>("delivery_status_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("delivery_status_id");

                    b.ToTable("delivery_status");
                });

            modelBuilder.Entity("Delivery_app.Models.DropPoints", b =>
                {
                    b.Property<int>("drop_point_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("contact_num")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("order_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("drop_point_id");

                    b.HasIndex("order_id");

                    b.ToTable("drop_points");
                });

            modelBuilder.Entity("Delivery_app.Models.Orders", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("contact_num")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("delivery_status_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("notify_recipient")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("notify_sender")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("pick_up_address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("pick_up_datetime")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("vehicle_type_id")
                        .HasColumnType("int");

                    b.Property<double>("weight")
                        .HasColumnType("double");

                    b.HasKey("order_id");

                    b.HasIndex("user_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Delivery_app.Models.UserType", b =>
                {
                    b.Property<int>("user_type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("user_type_id");

                    b.ToTable("user_type");
                });

            modelBuilder.Entity("Delivery_app.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("name")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("password")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("password_salt")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("phone_num")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("user_type_id")
                        .HasColumnType("int");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Delivery_app.Models.DropPoints", b =>
                {
                    b.HasOne("Delivery_app.Models.Orders", "order")
                        .WithMany("drop_points")
                        .HasForeignKey("order_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Delivery_app.Models.Orders", b =>
                {
                    b.HasOne("Delivery_app.Models.Users", "user")
                        .WithMany("orders")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
